{
  "name": "accordion",
  "dependencies": [
    "@radix-ui/react-accordion"
  ],
  "files": [
    {
      "name": "accordion.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Main Accordion Component\nconst Accordion = AccordionPrimitive.Root\n\n// Accordion Item Component with Blue Border on Open\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"border-t border-gray-300 transition-colors data-[state=open]:shadow-lg\",\n      className\n    )}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\n// Accordion Trigger Component with Chevron at End and Bold Blue Outline on Open\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between border border-transparent p-4 text-lg font-medium transition-all duration-300 data-[state=open]:border-2 data-[state=open]:border-blue-600\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-5 w-5 text-blue-600 transition-transform duration-200 data-[state=open]:rotate-180\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = \"AccordionTrigger\"\n\n// Accordion Content Component with Padding\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden px-4 pb-4 pt-2 text-base transition-all duration-300 data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"text-gray-700\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = \"AccordionContent\"\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"
    }
  ],
  "type": "components:ui"
}