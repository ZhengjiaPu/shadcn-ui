{
  "name": "slider",
  "dependencies": [
    "@radix-ui/react-slider"
  ],
  "files": [
    {
      "name": "slider.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const [isActive, setIsActive] = React.useState(false)\n\n  return (\n    <SliderPrimitive.Root\n      ref={ref}\n      className={cn(\n        \"relative flex w-full touch-none select-none items-center\",\n        className\n      )}\n      {...props}\n      onPointerDown={() => setIsActive(true)}\n      onPointerUp={() => setIsActive(false)}\n    >\n      <SliderPrimitive.Track className=\"relative h-[4px] w-full grow overflow-hidden bg-secondary\">\n        <SliderPrimitive.Range\n          className={cn(\n            \"absolute h-full transition-colors\",\n            isActive ? \"bg-blue-600\" : \"bg-black\"\n          )}\n        />\n      </SliderPrimitive.Track>\n      <SliderPrimitive.Thumb\n        className={cn(\n          \"block h-5 w-5 rounded-full transition-colors\",\n          isActive ? \"border-2 border-blue-600 bg-blue-600\" : \"bg-black\"\n        )}\n      />\n    </SliderPrimitive.Root>\n  )\n})\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n"
    }
  ],
  "type": "components:ui"
}