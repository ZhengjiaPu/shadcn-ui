{
  "name": "slider",
  "dependencies": [
    "@radix-ui/react-slider"
  ],
  "files": [
    {
      "name": "slider.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root> & {\n    backgroundColor?: string\n    trackColor?: string\n    thumbColor?: string\n    size?: \"small\" | \"medium\" | \"large\"\n  }\n>(\n  (\n    {\n      className,\n      backgroundColor = \"bg-gray-200\",\n      trackColor = \"bg-black\",\n      thumbColor = \"bg-black\",\n      size = \"medium\",\n      ...props\n    },\n    ref\n  ) => {\n    let sliderSizeClass\n    switch (size) {\n      case \"small\":\n        sliderSizeClass = \"h-1\"\n        break\n      case \"large\":\n        sliderSizeClass = \"h-4\"\n        break\n      default:\n        sliderSizeClass = \"h-2\"\n        break\n    }\n\n    return (\n      <SliderPrimitive.Root\n        ref={ref}\n        className={cn(\n          \"relative flex w-full touch-none select-none items-center\",\n          className\n        )}\n        {...props}\n      >\n        {/* Track with rounded-full to ensure rounded corners */}\n        <SliderPrimitive.Track\n          className={cn(\n            \"relative w-full overflow-hidden rounded-full\",\n            backgroundColor,\n            sliderSizeClass\n          )}\n        >\n          {/* Range with full height and rounded-full */}\n          <SliderPrimitive.Range\n            className={cn(\"absolute h-full rounded-full\", trackColor)}\n          />\n        </SliderPrimitive.Track>\n        <SliderPrimitive.Thumb\n          className={cn(\n            \"block rounded-full transition-colors\",\n            thumbColor,\n            size === \"small\"\n              ? \"h-3 w-3\"\n              : size === \"large\"\n              ? \"h-6 w-6\"\n              : \"h-4 w-4\"\n          )}\n        />\n      </SliderPrimitive.Root>\n    )\n  }\n)\n\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n"
    }
  ],
  "type": "components:ui"
}